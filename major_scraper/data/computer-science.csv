computer-science,101,Introduction to Computing,"b'This course provides a general introduction designed to dispel the  mystery surrounding computers and introduces the fundamental ideas of programs  and algorithms. Carries MCS divisional credit in CAS. This course fulfills a  single unit in each of the following BU Hub areas: Quantitative Reasoning II,  Digital/Multimedia Expression.'"
computer-science,103,Introduction to Internet Technologies and Web Programming,"b', Web application programming, and  algorithmic thinking. General familiarity with the Internet is assumed. Carries  MCS divisional credit in CAS. This course fulfills a single unit in each of the  following BU Hub areas: Quantitative Reasoning II, Digital/Multimedia Expression.'"
computer-science,105,Introduction to Databases and Data Mining,"b'd data modeling; writing simple programs to  process data; data mining and data visualization. Applications are drawn from  business, the arts, the life sciences, and social sciences. Carries MCS  divisional credit in CAS. This course fulfills a single unit in the following  BU Hub area: Quantitative Reasoning II.'"
computer-science,108,Introduction to Applications Programming,"b'tion decomposition and abstraction; data  manipulation and programming with databases; graphical user interfaces;  debugging. Assignments include applications in science, commerce, games, the  Web, and social networking. Carries MCS divisional credit in CAS. This course  fulfills a single unit in the following BU Hub area: Quantitative Reasoning I.'"
computer-science,111,Introduction to Computer Science 1,"b'putational problem-solving skills by programming in the  Python language, and exposes students to variety of other topics from computer  science and its applications. Carries MCS divisional credit in CAS. This course  fulfills a single unit in the following BU Hub area: Quantitative Reasoning II.'"
computer-science,112,Introduction to Computer Science 2,"b', algorithm analysis, linked lists, stacks, queues, trees, graphs,  tables, searching, and sorting. Carries MCS divisional credit in CAS. This course  fulfills a single unit in the following BU Hub area: Quantitative Reasoning II, Creativity and Innovation, Critical Thinking.'"
computer-science,131,Combinatoric Stuctures,b'ic structures used in computer science. Rigorous reasoning is  emphasized. This course fulfills a single unit in the following BU Hub area:  Quantitative Reasoning II.'
computer-science,132,Geometric Algorithms,"b'Examples of topics: Cartesian   geometry, transformations and their representation, queries and sampling, triangulations. Emphasis on   rigorous reasoning and analysis, advancing algorithmic maturity and expertise in its application.'"
computer-science,210,Computer Systems,"b'ardware  fundamentals including digital logic, memory systems, processor design, buses, I/O  subsystems, data representations, computer arithmetic, and instruction-set  architecture. Software concepts including assembly language programming, operating  systems, assemblers, linkers, and systems programming in C. This course fulfills a  single unit in the following BU Hub area: Quantitative Reasoning II.'"
computer-science,235,Algebraic Algorithms,"b'atrices, polynomials; and applications to various CS areas, such as cryptography and fault-tolerance. Emphasis on rigorous reasoning and analysis. This course fulfills a single unit in the following BU Hub area: Quantitative Reasoning II.'"
computer-science,237,Probability in Computing,"b'cience. Develops an understanding of the crucial role played by randomness in computing, both as a powerful tool and as a challenge to confront and analyze. Emphasis on rigorous reasoning, analysis, and algorithmic thinking. This course fulfills a single unit in each of the following BU Hub areas: Quantitative Reasoning II, Critical Thinking.'"
computer-science,299,Internship Seminar,b'y firms and to learn about  entrepreneurship in technology. Availability depends on market needs.'
computer-science,320,Concepts of Programming Languages,"b'ssion, and control structures. Environments: compile-time, load-time, and run-time. Interpreters.'"
computer-science,330,Introduction to Analysis of Algorithms,"b'algorithms; dynamic programming; network flows; polynomial- time reductions; NP-hard and NP-complete problems; approximation algorithms;  randomized algorithms This course fulfills a single unit in each of the  following BU Hub areas: Quantitative Reasoning II, Critical Thinking.'"
computer-science,332,Elements of the Theory of Computation,"b""mputation, polynomial time, Church's thesis; universal algorithms, undecidability and intractability; time and space complexity, nondeterminism, probabilistic computation and reductions of computational problems."""
computer-science,350,Fundamentals of Computing Systems,"b'hods underlying computing systems design. Topics include modeling and analysis of concurrent processing, computational  resource scheduling and consumption, and performance evaluation techniques.'"
computer-science,401,Senior Independent Work,b''
computer-science,402,Senior Independent Work,b''
computer-science,410,Advanced Software Systems,"b'networking, multiprocessing, exception handling, and system services. Other topics are explored using C and Perl under the UNIX operating system. Requires a working knowledge of the C programming language and experience with UNIX as a user, or equivalent.'"
computer-science,411,Software Engineering,"b'de software tools,  software testing methodologies, retrofitting, regression testing, structured design and  structured programming, software characteristics and quality, complexity, entropy, deadlock,  fault tolerance, formal proofs of program correctness, chief program teams, and structured  walk-throughs.'"
