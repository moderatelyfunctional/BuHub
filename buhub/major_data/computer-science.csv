computer-science,101,Introduction to Computing,"b'This course provides a general introduction designed to dispel the  mystery surrounding computers and introduces the fundamental ideas of programs  and algorithms. Carries MCS divisional credit in CAS. This course fulfills a  single unit in each of the following BU Hub areas: Quantitative Reasoning II,  Digital/Multimedia Expression.'"
computer-science,103,Introduction to Internet Technologies and Web Programming,"b', Web application programming, and  algorithmic thinking. General familiarity with the Internet is assumed. Carries  MCS divisional credit in CAS. This course fulfills a single unit in each of the  following BU Hub areas: Quantitative Reasoning II, Digital/Multimedia Expression.'"
computer-science,105,Introduction to Databases and Data Mining,"b'd data modeling; writing simple programs to  process data; data mining and data visualization. Applications are drawn from  business, the arts, the life sciences, and social sciences. Carries MCS  divisional credit in CAS. This course fulfills a single unit in the following  BU Hub area: Quantitative Reasoning II.'"
computer-science,108,Introduction to Applications Programming,"b'tion decomposition and abstraction; data  manipulation and programming with databases; graphical user interfaces;  debugging. Assignments include applications in science, commerce, games, the  Web, and social networking. Carries MCS divisional credit in CAS. This course  fulfills a single unit in the following BU Hub area: Quantitative Reasoning I.'"
computer-science,111,Introduction to Computer Science 1,"b'putational problem-solving skills by programming in the  Python language, and exposes students to variety of other topics from computer  science and its applications. Carries MCS divisional credit in CAS. This course  fulfills a single unit in the following BU Hub area: Quantitative Reasoning II.'"
computer-science,112,Introduction to Computer Science 2,"b', algorithm analysis, linked lists, stacks, queues, trees, graphs,  tables, searching, and sorting. Carries MCS divisional credit in CAS. This course  fulfills a single unit in the following BU Hub area: Quantitative Reasoning II, Creativity and Innovation, Critical Thinking.'"
computer-science,131,Combinatoric Stuctures,b'ic structures used in computer science. Rigorous reasoning is  emphasized. This course fulfills a single unit in the following BU Hub area:  Quantitative Reasoning II.'
computer-science,132,Geometric Algorithms,"b'Examples of topics: Cartesian   geometry, transformations and their representation, queries and sampling, triangulations. Emphasis on   rigorous reasoning and analysis, advancing algorithmic maturity and expertise in its application.'"
computer-science,210,Computer Systems,"b'ardware  fundamentals including digital logic, memory systems, processor design, buses, I/O  subsystems, data representations, computer arithmetic, and instruction-set  architecture. Software concepts including assembly language programming, operating  systems, assemblers, linkers, and systems programming in C. This course fulfills a  single unit in the following BU Hub area: Quantitative Reasoning II.'"
computer-science,235,Algebraic Algorithms,"b'atrices, polynomials; and applications to various CS areas, such as cryptography and fault-tolerance. Emphasis on rigorous reasoning and analysis. This course fulfills a single unit in the following BU Hub area: Quantitative Reasoning II.'"
computer-science,237,Probability in Computing,"b'cience. Develops an understanding of the crucial role played by randomness in computing, both as a powerful tool and as a challenge to confront and analyze. Emphasis on rigorous reasoning, analysis, and algorithmic thinking. This course fulfills a single unit in each of the following BU Hub areas: Quantitative Reasoning II, Critical Thinking.'"
computer-science,299,Internship Seminar,b'y firms and to learn about  entrepreneurship in technology. Availability depends on market needs.'
computer-science,320,Concepts of Programming Languages,"b'ssion, and control structures. Environments: compile-time, load-time, and run-time. Interpreters.'"
computer-science,330,Introduction to Analysis of Algorithms,"b'algorithms; dynamic programming; network flows; polynomial- time reductions; NP-hard and NP-complete problems; approximation algorithms;  randomized algorithms This course fulfills a single unit in each of the  following BU Hub areas: Quantitative Reasoning II, Critical Thinking.'"
computer-science,332,Elements of the Theory of Computation,"b""mputation, polynomial time, Church's thesis; universal algorithms, undecidability and intractability; time and space complexity, nondeterminism, probabilistic computation and reductions of computational problems."""
computer-science,350,Fundamentals of Computing Systems,"b'hods underlying computing systems design. Topics include modeling and analysis of concurrent processing, computational  resource scheduling and consumption, and performance evaluation techniques.'"
computer-science,401,Senior Independent Work,b''
computer-science,402,Senior Independent Work,b''
computer-science,410,Advanced Software Systems,"b'networking, multiprocessing, exception handling, and system services. Other topics are explored using C and Perl under the UNIX operating system. Requires a working knowledge of the C programming language and experience with UNIX as a user, or equivalent.'"
computer-science,411,Software Engineering,"b'de software tools,  software testing methodologies, retrofitting, regression testing, structured design and  structured programming, software characteristics and quality, complexity, entropy, deadlock,  fault tolerance, formal proofs of program correctness, chief program teams, and structured  walk-throughs.'"
computer-science,440,Introduction to Artificial Intelligence,"b'ual and robotic  systems. Topics include human computer interfaces, computer vision, robotics, game playing, pattern  recognition, knowledge representation, planning.'"
computer-science,451,Distributed Systems,"b'ctured to operate as coherent single systems. Introducing principles of architecture, processes, communications, naming, synchronization, consistency and replication, fault tolerance and security, and paradigms such as web-based, object-based, file system, and consistency-based.'"
computer-science,455,Computer Networks,"b'and scalable   protocols. Topics include Internet design principles and methodology, TCP/IP   implementation, packet switching and routing algorithms, multicast, quality of service considerations, error detection and correction, and performance evaluation.'"
computer-science,460,Introduction to Database Systems,"b'al, and object-oriented data models; commercial query languages: SQL, relational algebra, relational calculus, and QBE; file organization, indexing and hashing, query optimization, transaction processing, concurrency control and recovery,integrity, and security.'"
computer-science,480,Introduction to Computer Graphics,"b'. Focus on fundamentals of two- and three-dimensional raster graphics: scan-conversion, clipping, geometric transformations,  and camera modeling. Introduces concepts in computational geometry, computer-human interfaces, animation, and visual realism.'"
computer-science,491,Directed Study,"b'ulty member. Student and   supervising faculty member arrange and document expectations and requirements. Examples   include internship opportunities for academic credit, in-depth study of a special topic, or   independent research project.'"
computer-science,492,Directed Study,"b'ulty member. Student and   supervising faculty member arrange and document expectations and requirements. Examples   include internship opportunities for academic credit, in-depth study of a special topic, or   independent research project.'"
computer-science,504,Data Mechanics,"b's. Applies mathematically  rigorous tools and methods for data collection, retrieval, integration, and interpretation. Uses  relational and MapReduce paradigms to assemble analysis, optimization, and decision-making  algorithms to track and scale data.'"
computer-science,506,Computational Tools for Data Science,"b'that are  commonly used in the analysis of data, such as clustering, classification, regression, and  network analysis. Emphasizes hands-on application of methods via programming.'"
computer-science,507,Introduction to Optimization in Computing and Machine Learning,"b'Intended audience is advanced undergraduates and master students.  Topics include modeling using mathematical programs, gradient descent algorithms, linear  programming, Lagrangian duality, basics of complexity theory for optimization.'"
computer-science,511,Formal Methods 1,"b'computer system behavior.    Topics include formal logical reasoning about computer programs and systems, automated and    semi-automated verification, and algorithmic methodologies for ascertaining that a software    system satisfies its formally specified properties. Cannot be taken for credit in addition to the   course with the same number formerly entitled ""Object-Oriented Software Principles.""'"
computer-science,512,Formal Methods 2,"b'computer system behavior.  Topics include formal logical reasoning about computer programs and systems, automated and  semi-automated verification, and algorithmic methodologies for ascertaining that a computing  system satisfies its formally specified properties.'"
computer-science,520,Programming Languages,"b'Concepts of programming languages: data, storage, control, and definition structures; concurrent and distributed programming; functional and logic programming.'"
computer-science,530,Advanced Algorithms,"b'udies the design and efficiency of algorithms in several areas of computer science. Topics are chosen  from graph algorithms, sorting and searching, NP-complete problems, pattern matching, parallel  algorithms, and dynamic programming.'"
computer-science,531,Advanced Optimization Algorithms,"b'd continuous.  Intended audience is advanced master students and doctoral students. Topics include gradient  descent algorithms, online optimization, linear and semidefinite programming, duality, network  optimization, submodular optimization, approximation algorithms via continuous relaxations.'"
computer-science,533,Spectral Methods for Machine Learning and Network Analysis,"b'analysis of networks and high-dimensional data. Topics include spectral graph  theory, random walks over networks and their convergence, spectral clustering, subspace  projections and embeddings, numerical algorithms.'"
computer-science,535,Complexity Theory,"b'nterest in the theory of computation chosen from computational models, games and hierarchies of problems, abstract complexity theory, informational complexity theory, time-space trade-offs, probabilistic computation, and recent work on particular combinatorial problems.'"
computer-science,537,Randomness in Computing,b'of probabilistic ideas of the theory of computation. Topics may include Monte Carlo and Las Vegas probabilistic computations; average case complexity and analysis; random and pseudorandom strings; games and cryptographic protocol; information; inductive inference; reliability;others. (Offered alternate years.)'
computer-science,538,Fundamentals of Cryptography  ,"b'iality and authenticity of data.  Definitions and proofs of security for practical constructions.  Topics include perfectly secure encryption, pseudorandom generators, RSA and Elgamal encryption, Diffie-Hellman key agreement, RSA signatures, secret sharing, block and stream ciphers.'"
computer-science,542,Machine Learning,"b'uivalent), Probability (CASCS237 or equivalent), and single-variable calculus (MA 123-124 or  equivalent); multi-variable calculus (MA 225 or equivalent) is highly recommended. Introduction  to modern machine learning concepts, techniques, and algorithms. Topics include regression,  kernels, support vector machines, feature selection, boosting, clustering, hidden Markov  models, and Bayesian networks. Programming assignments emphasize taking theory into  practice, through applications on real-world data sets.'"
computer-science,548,Advanced Cryptography,"b'lity and authenticity against active attacks, zero-knowledge proofs; Fiat-Shamir signature schemes; non-malleable public-key encryption; authenticated symmetric encryption; secure multiparty protocols for tasks ranging from Byzantine agreement to mental poker to threshold cryptography.'"
computer-science,552,Introduction to Operating Systems,"b'scheduling; memory management; virtual memory; job scheduling, resource allocation; system modeling; and performance measurement and evaluation.'"
computer-science,558,Computer Networks Security,"b'tems. Covers network  security, web security, privacy, and basic cryptographic tools (symmetric and public key cryptography,  encryption, key exchange, hashing and signatures). Broader social, legal and political aspects of security  addressed.'"
computer-science,562,Advanced Database Applications ,"b'tial, temporal, and spatiotemporal index structures.   Indexing methods for image and multimedia databases and data  warehouses.  New data analysis techniques for large databases,  clustering and rule discovery for very large datasets.'"
computer-science,565,Algorithmic Data Mining,"b'ation and  correlation discovery, classification and clustering of large datasets, outlier detection.  Emphasis on the algorithmic aspects as well as the application of mining in real-world  problems.'"
computer-science,568,Applied Cryptography,b'd implementation of  modern day cryptosystems that protect privacy and authenticity of data in transit and at rest.  Demonstrates how cryptosystems evolved to withstand systems-level threats and  mathematical cryptanalysis.'
computer-science,581,Computational Fabrication,b'sical prototypes  from geometric models. Student-led paper presentations cover research from prominent  Computer Graphics and Human Computer Interaction conferences. Culminates in a design  project involving a computational component and physical prototyping.'
computer-science,585,Image and Video Computing,"b'image and video understanding based on color, shading, stereo, and motion. Topics include face recognition, human-computer interfaces, animal and vehicle tracking, and medical image analysis.'"
computer-science,591,Topics in Computer Science,"b'puter Science Department for detailed descriptions. Though courses are variable credit,  registration for less than four credits requires instructor approval.'"
